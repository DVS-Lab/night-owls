set.seed(125)
#Full
ntrials = 65
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
print(sequence)
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
set.seed(125)
#Full
ntrials = 65
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
print(sequence)
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
set.seed(1125) # Set a seed for reproducibility
#Practice
ntrials = 12
colors <- c('Green','Blue')
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
# Define the numbers and their probabilities
numbers <- c(1, 2, 4, 7)
#numbers <- c(1,1,1,1)
probabilities <- c(0.50, 0.25, 0.15, 0.10)
# Generate the sequence of numbers
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
# Display the sequence
print(sequence)
# Check the proportion of each number
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
set.seed(125)
#Full
ntrials = 65
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
print(sequence)
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
set.seed(1125) # Set a seed for reproducibility
#Practice
ntrials = 12
colors <- c('Green','Blue')
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
# Define the numbers and their probabilities
numbers <- c(1, 2, 3, 4)
#numbers <- c(1,1,1,1)
probabilities <- c(0.50, 0.25, 0.15, 0.10)
# Generate the sequence of numbers
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
# Display the sequence
print(sequence)
# Check the proportion of each number
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,'C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/prac_MID_trials.csv',row.names = F)
set.seed(125)
#Full
ntrials = 60
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
print(sequence)
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
set.seed(1125) # Set a seed for reproducibility
#Practice
ntrials = 12
colors <- c('Green','Blue')
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
# Define the numbers and their probabilities
numbers <- c(1, 2, 3, 4)
#numbers <- c(1,1,1,1)
probabilities <- c(0.50, 0.25, 0.15, 0.10)
# Generate the sequence of numbers
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
# Display the sequence
print(sequence)
# Check the proportion of each number
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,'C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/prac_MID_trials.csv',row.names = F)
set.seed(125)
#Full
ntrials = 65
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors, size = ntrials, replace = TRUE)
print(csequence)
table(csequence) / length(csequence)
sequence <- sample(numbers, size = ntrials, replace = TRUE, prob = probabilities)
print(sequence)
table(sequence) / length(sequence)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
set.seed(1125) # Set a seed for reproducibility
#Practice
ntrials = 12
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
set.seed(1125) # Set a seed for reproducibility
#Practice
ntrials = 12
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
csequence <- sample(colors)
print(csequence)
itis <- c(rep(1, ntrials/2), rep(2, ntrials/4), rep(3, ntrials/6), rep(4, ntrials/12))
isequence <- sample(itis)
print(isequence)
mid_trials <- as.data.frame(cbind(csequence,isequence))
colnames(mid_trials) <- c('CueColor','itiTime')
View(mid_trials)
write.csv(mid_trials,'C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/prac_MID_trials.csv',row.names = F)
66/4
66/6
66/12
64/2
72/4
72/6
72/12
set.seed(125)
#Full
ntrials = 72
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors)
isequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,sequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
warnings()
set.seed(125)
#Full
ntrials = 72
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors)
isequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,isequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
set.seed(125)
#Full
ntrials = 72
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
itis <- c(rep(1, ntrials/2), rep(2, ntrials/4), rep(3, ntrials/6), rep(4, ntrials/12))
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors)
isequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,isequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
60/4
60/12
set.seed(125)
#Full
ntrials = 60
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
itis <- c(rep(1, ntrials/2), rep(2, ntrials/4), rep(3, ntrials/6), rep(4, ntrials/12))
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors)
isequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,isequence))
colnames(mid_trials) <- c('CueColor','itiTime')
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
sum(itis)
itis <- c(rep(2, ntrials/2), rep(4, ntrials/4), rep(6, ntrials/6), rep(8, ntrials/12))
sum(itis)
1/2 + 1/2 + 1/6
1/2 + 1/3 + 1/6
itis <- c(rep(2, ntrials/2), rep(4, ntrials/3), rep(6, ntrials/6))
sum(itis)
1/2 + 1/4 + 1/6
isis <- c(rep(1.5, ntrials/2), rep(2, ntrials/4),  rep(2.5, ntrials/8), rep(3, ntrials/16), rep(3.5, ntrials/32),  rep(4, ntrials/64))
#Practice
ntrials = 12
isis <- c(rep(1.5, ntrials/2), rep(2, ntrials/4),  rep(2.5, ntrials/8), rep(3, ntrials/16), rep(3.5, ntrials/32),  rep(4, ntrials/64))
isis
1/2 + 1/4 + 1/8 + 1/16 + 1/32
.96875 + 1/64
1/2 + 1/4 + 1/8 + 1/16 + 1/16
64/4
64/8
64/16
64/32
1/2 + 1/3 + 1/6
itisequence <- sample(itis)
csequence <- sample(colors)
isisequence <- sample(isis)
itisequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,isiequence,itisequence))
mid_trials <- as.data.frame(cbind(csequence,isisequence,itisequence))
View(mid_trials)
mean(isisequence)
mid_trials[4] <- mid_trials[3] - (1.75-mid_trials[2])
mid_trials[4] <- as.numeric(mid_trials[3]) - (1.75-as.numeric(mid_trials[2]))
as.numeric(mid_trials[3])
as.numeric(mid_trials[,3])
mid_trials[4] <- as.numeric(mid_trials[,3]) - (1.75-as.numeric(mid_trials[,2]))
View(mid_trials)
table(mid_trials[4])
mid_trials <- mid_trials[-3]
View(mid_trials)
set.seed(125)
#Full
ntrials = 64
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
isis <- c(rep(1.5, ntrials/2), rep(2, ntrials/4),  rep(2.5, ntrials/8), rep(3, ntrials/16), rep(3.5, ntrials/32),  rep(4, ntrials/32))
itis <- c(rep(2, ntrials/2), rep(4, ntrials/3), rep(6, ntrials/6))
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors)
isisequence <- sample(isis)
itisequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,isisequence,itisequence))
mid_trials[4] <- as.numeric(mid_trials[,3]) - (1.75-as.numeric(mid_trials[,2]))
mid_trials <- mid_trials[-3]
colnames(mid_trials) <- c('CueColor','isiTime','itiTime')
print(sum(mid_trials[2])+sum(mid_trials[3]))
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
set.seed(125)
#Full
ntrials = 64
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
isis <- c(rep(1.5, ntrials/2), rep(2, ntrials/4),  rep(2.5, ntrials/8), rep(3, ntrials/16), rep(3.5, ntrials/32),  rep(4, ntrials/32))
itis <- c(rep(2, ntrials/2), rep(4, ntrials/3), rep(6, ntrials/6))
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors)
isisequence <- sample(isis)
itisequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,isisequence,itisequence))
mid_trials[4] <- as.numeric(mid_trials[,3]) - (1.75-as.numeric(mid_trials[,2]))
mid_trials <- mid_trials[-3]
colnames(mid_trials) <- c('CueColor','isiTime','itiTime')
print(sum(as.numeric(mid_trials[,2]))+sum(mid_trials[3]))
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
warnings()
itis <- c(rep(2, ntrials/2), rep(4, ntrials/3), rep(6, ntrials/6))
64/3
1/2 + 1/4 + 1/8
.875 + 1/16
.875 + 1/8
#Full
ntrials = 64
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
isis <- c(rep(1.5, ntrials/2), rep(2, ntrials/4),  rep(2.5, ntrials/8), rep(3, ntrials/16), rep(3.5, ntrials/32),  rep(4, ntrials/32))
itis <- c(rep(2, ntrials/2), rep(4, ntrials/4), rep(6, ntrials/8), rep(6, ntrials/8))
set.seed(125)
#Full
ntrials = 64
colors <- c(rep('Green', ntrials/2), rep('Blue', ntrials/2))
isis <- c(rep(1.5, ntrials/2), rep(2, ntrials/4),  rep(2.5, ntrials/8), rep(3, ntrials/16), rep(3.5, ntrials/32),  rep(4, ntrials/32))
itis <- c(rep(2, ntrials/2), rep(4, ntrials/4), rep(6, ntrials/8), rep(8, ntrials/8))
for (ses in 1:12){
for (run in 1:2){
csequence <- sample(colors)
isisequence <- sample(isis)
itisequence <- sample(itis)
mid_trials <- as.data.frame(cbind(csequence,isisequence,itisequence))
mid_trials[4] <- as.numeric(mid_trials[,3]) - (1.75-as.numeric(mid_trials[,2]))
mid_trials <- mid_trials[-3]
colnames(mid_trials) <- c('CueColor','isiTime','itiTime')
print(sum(as.numeric(mid_trials[,2]))+sum(mid_trials[3]))
write.csv(mid_trials,paste0('C:/Users/mmatt/Desktop/Projects/NightOwls/night-owls/mid/timing/ses-',ses,'_run-',run,'_MID_trials.csv'),row.names = F)
}
}
df <- read.csv('C:/Users/mmatt/Desktop/Projects/RewDev/Analysis/final_df.csv')
df <- as.data.frame(df)
#Spaghetti Plots
#Find complete observation level data
df$complete.pleas <- complete.cases(df[,c('age','pleas')])*1
df$complete.inh <- complete.cases(df[,c('age','inh')])*1
df$complete.psc <- complete.cases(df[,c('age','psc')])*1
df$complete.acips <- complete.cases(df[,c('age','acips')])*1
df$complete.drive <- complete.cases(df[,c('age','drive')])*1
df$complete.rewr <- complete.cases(df[,c('age','rewr')])*1
df$complete.funs <- complete.cases(df[,c('age','funs')])*1
df$complete.BAS <- complete.cases(df[,c('age','BAS')])*1
df <-group_by(df, id)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(ggpubr)
df <- read.csv('C:/Users/mmatt/Desktop/Projects/RewDev/Analysis/final_df.csv')
df <- as.data.frame(df)
#Spaghetti Plots
#Find complete observation level data
df$complete.pleas <- complete.cases(df[,c('age','pleas')])*1
df$complete.inh <- complete.cases(df[,c('age','inh')])*1
df$complete.psc <- complete.cases(df[,c('age','psc')])*1
df$complete.acips <- complete.cases(df[,c('age','acips')])*1
df$complete.drive <- complete.cases(df[,c('age','drive')])*1
df$complete.rewr <- complete.cases(df[,c('age','rewr')])*1
df$complete.funs <- complete.cases(df[,c('age','funs')])*1
df$complete.BAS <- complete.cases(df[,c('age','BAS')])*1
df <-group_by(df, id)
df <-mutate(df, a.pleas=sum(complete.pleas),
a.inh=sum(complete.inh),
a.psc=sum(complete.psc),
a.acips=sum(complete.acips),
a.drive=sum(complete.drive),
a.rewr=sum(complete.rewr),
a.funs=sum(complete.funs),
a.BAS=sum(complete.BAS))
df_pl <-filter(df, row_number(id)==1)
df <- ungroup(df)
df <- as.data.frame(df)
df_pl <- as.data.frame(df_pl)
df_pl$pleas3 <- df_pl$a.pleas > 2
df_pl$inh3 <- df_pl$a.inh > 2
df_pl$psc3 <- df_pl$a.psc > 2
df_pl$acips3 <- df_pl$a.acips > 2
df_pl$drive3 <- df_pl$a.drive > 2
df_pl$rewr3 <- df_pl$a.rewr > 2
df_pl$funs3 <- df_pl$a.funs > 2
df_pl$BAS3 <- df_pl$a.BAS > 2
df.gg <- merge(df[c('id','age','pleas','inh','psc','acips','drive','rewr','funs','BAS')],
df_pl[c('id','pleas3','inh3','psc3','acips3','drive3','rewr3','funs3','BAS3')],
by='id',all.x=T)
df.pleas <- df.gg[df.gg$pleas3==T,]
p.pleas <- ggplot(data = df.pleas, aes(x = age, y = pleas)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("EATQ Pleasure Sensitivity") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(5,25)
p.pleas
df.inh <- df.gg[df.gg$inh3==T,]
p.inh <- ggplot(data = df.inh, aes(x = age, y = inh)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("EATQ Inhibitory Control") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(15,40) + annotate("text", x = -2, y = 28.5, label = "*", color = "red", fontface = 3)
p.inh
df.psc <- df.gg[df.gg$psc3==T,]
p.psc <- ggplot(data = df.psc, aes(x = age, y = psc)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("PSC") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(55,115) + annotate("text", x = -2, y = 94, label = "**", color = "red", fontface = 3)
p.psc
df.acips <- df.gg[df.gg$acips3==T,]
p.acips <- ggplot(data = df.acips, aes(x = age, y = acips)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("ACIPS") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(12,50)
p.acips
df.drive <- df.gg[df.gg$drive3==T,]
p.drive <- ggplot(data = df.drive, aes(x = age, y = drive)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("BAS Drive") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(7,15)
p.drive
df.rewr <- df.gg[df.gg$rewr3==T,]
p.rewr <- ggplot(data = df.rewr, aes(x = age, y = rewr)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("BAS Reward Responsiveness") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(13,21)
p.rewr
df.funs <- df.gg[df.gg$funs3==T,]
p.funs <- ggplot(data = df.funs, aes(x = age, y = funs)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("BAS Fun Seeking") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(8,16) + annotate("text", x = -2, y = 13, label = "**", color = "red", fontface = 3)
p.funs
df.BAS <- df.gg[df.gg$BAS3==T,]
p.BAS <- ggplot(data = df.BAS, aes(x = age, y = BAS)) +
geom_line(method=lm,stat="smooth",aes(group=id),se=FALSE,linewidth=.5,alpha=.6) +
xlab("Age") + ylab("BAS Total") + aes(colour = factor(id)) +
geom_smooth(colour="black", linewidth=1,method="lm") +
scale_x_continuous(breaks=c(.06,2.06,4.06), labels=c(11, 13, 15)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none") +
ylim(30,50)
p.BAS
ggarrange(p.pleas,p.inh,p.drive,p.rewr,p.psc,p.acips,p.funs,p.BAS,nrow=2,ncol=4)
